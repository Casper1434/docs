{
  "openapi": "3.0.1",
  "info": {
    "title": "Ck IT Solutions API",
    "description": "An API that can be used to mange Ck IT Solutions products and services.",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.ck-itsolutions.nl/v1"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/firewall/rule": {
      "get": {
        "description": "Retrieves anti-ddos firewall rules",
        "responses": {
          "200": {
            "description": "Lists all firewallrules created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/list_rules"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new firewall rule",
        "requestBody": {
          "description": "Plant to add to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/new_firewall"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns newly created firewall rule with uuid as json.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/list_rules"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/plants/{id}": {
      "delete": {
        "description": "Deletes a single plant based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of plant to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Plant deleted",
            "content": {}
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "list_rules": {
        "required": [
          "name"
        ],
        "type": "object"
      },
      "new_firewall": {
        "allOf": [
          {
            "$ref": "#/components/schemas/list_rules"
          },
          {
            "required": [
              "descr",
              "dst",
              "protocol",
              "action",
              "priority"
            ],
            "type": "object",
            "properties": {
              "descr": {
                "description": "Description of the Firewall rule.",
                "type": "string"
              },
              "dst": {
                "description": "Destination IP the firewall rule needs to be created for (subnets supported).",
                "type": "string"
              },
              "protocol": {
                "description": "IP Protocol: IPv4 / IPv6",
                "type": "string"
              },
              "action": {
                "description": "Allowed options: pass / block",
                "type": "string"
              },
              "priority": {
                "description": "Rule priority with 1 being highest priority.",
                "type": "integer"
              }
              }
            }
        ]
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    }
  }
}